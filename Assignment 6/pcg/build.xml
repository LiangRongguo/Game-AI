<project name="marioai" default="compile" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>
  <property name="main-class"  value="dk.itu.mario.engine.PlayCustomized"/>
  <property name="jar.dir"     value="build/jar"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>

    <copy todir="${build}">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="true" includeantruntime="false" >
      <classpath>
         <!-- 
		 <fileset dir="${lib}">
           <include name="**/*.jar" />
         </fileset>
		 -->
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
            <zipgroupfileset dir="${build}" excludes="natives/*" />
            <fileset dir="${build}" includes="." />
        </jar>
  </target>

  <target name="play" depends="compile"
        description="tests Mario whether it works" >
    <!-- Create the distribution directory -->
    <java classname="dk.itu.mario.engine.PlayCustomized" dir="${build}" failonerror="true" fork="true">
      <classpath>
         <fileset dir="bin">
           <include name="**/*.jar" />
         </fileset>
           <pathelement location="${build}" />
      </classpath>
    </java>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
